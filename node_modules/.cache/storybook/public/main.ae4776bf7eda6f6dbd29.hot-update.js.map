{"version":3,"file":"main.ae4776bf7eda6f6dbd29.hot-update.js","sources":["webpack:///./.storybook/preview.js","webpack:///./src/components/organisms/VideosListItem/index.jsx","webpack:///./src/components/organisms/VideosListItem/index.stories.jsx"],"sourcesContent":["import React from 'react';\nimport { MemoryRouter } from 'react-router';\nimport { addDecorator } from '@storybook/react';\nimport GlobalStyle from '../src/style/GlobalStyle'; \n\naddDecorator(storyFn => (\n  <MemoryRouter\n    initialEntries={['/', 'posts']}\n  >\n    {storyFn()}\n  </MemoryRouter>\n));\n\naddDecorator(storyFn => <><GlobalStyle />{storyFn()}</>);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport Image from '~/components/atoms/Image';\nimport Typography from '~/components/atoms/Typography';\n\nconst Root = styled.div`\n  cursor: pointer;\n  display: flex;\n  padding: 4px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  align-items: center;\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst Thumbnail = styled.div`\n  flex-shrink: 1;\n  min-width: 160px;\n  max-width: 160px;\n  > * {\n    width: 100%;\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  margin-left: 10px;\n  word-break: break-all;\n`;\n\nconst Description = styled(Typography)`\n  margin-top: 5px;\n  height: fit-content;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`;\n\nconst ViewCount = styled(Typography)`\n  margin-top: 5px;\n`;\n\nconst VideosListItemPresenter = ({\n  className,\n  onClick,\n  thumbnailUrl,\n  title,\n  description,\n  viewCount,\n}) => (\n  <Root className={className} onClick={onClick}>\n    <Thumbnail>\n      <Image src={thumbnailUrl} alt={title} />\n    </Thumbnail>\n    <InfoWrapper>\n      <Typography size=\"subtitle\" bold display=\"inline-block\">{title}</Typography>\n      <Description>{description}</Description>\n      <ViewCount size=\"xs\" color=\"gray\">\n        {viewCount}\n        回視聴\n      </ViewCount>\n    </InfoWrapper>\n  </Root>\n);\n\nVideosListItemPresenter.propTypes = {\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  thumbnailUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  viewCount: PropTypes.string.isRequired,\n};\n\nVideosListItemPresenter.defaultProps = {\n  className: '',\n  onClick: null,\n};\n\nconst VideosListItemContainer = ({\n  className,\n  video: {\n    id,\n    snippet: {\n      title,\n      description,\n      thumbnails: {\n        medium: {\n          url: thumbnailUrl,\n        },\n      },\n    },\n    statistics: {\n      viewCount,\n    },\n  },\n  presenter,\n}) => {\n  // ページ遷移をさせるため、useHistoryを使ってhistoryオブジェクトを取得\n  const history = useHistory();\n  return presenter({\n    className,\n    onClick: () => {\n      // クリックされたときにページ遷移する\n      history.push(`/play/${id}`);\n    },\n    title,\n    thumbnailUrl,\n    description,\n    viewCount,\n  });\n};\n\nVideosListItemContainer.propTypes = {\n  className: PropTypes.string,\n  video: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    snippet: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      thumbnails: PropTypes.shape({\n        medium: PropTypes.shape({\n          url: PropTypes.string,\n        }),\n      }).isRequired,\n    }).isRequired,\n    statistics: PropTypes.shape({\n      viewCount: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nVideosListItemContainer.defaultProps = {\n  className: '',\n};\n\nexport default (props) => (\n  <VideosListItemContainer\n    presenter={VideosListItemPresenter}\n    {...props}\n  />\n);\n","import React from 'react';\nimport VideosListItem from '.';\nimport video from './sampleData.json';\n\nexport default { title: 'organisms/VideosListItem' };\n\nexport const videoListItem = () => <VideosListItem video={video} />;"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;AAEA;AAAA;AAEA;AADA;AAAA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAHA;AAJA;AARA;AACA;AADA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAFA;AACA;AAIA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAHA;AASA;AACA;AADA;AAXA;AAFA;AAmBA;AACA;AADA;AAIA;AAAA;AAEA;AADA;AADA;;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;A","sourceRoot":""}