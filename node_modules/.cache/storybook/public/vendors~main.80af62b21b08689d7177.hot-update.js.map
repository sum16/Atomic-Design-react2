{"version":3,"file":"vendors~main.80af62b21b08689d7177.hot-update.js","sources":["webpack:///./node_modules/@storybook/addon-actions/dist/esm/index.js","webpack:///./node_modules/@storybook/addon-actions/dist/esm/models/index.js","webpack:///./node_modules/@storybook/addon-actions/dist/esm/preset/addArgsHelpers.js","webpack:///./node_modules/@storybook/addon-actions/dist/esm/preset/addDecorator.js","webpack:///./node_modules/@storybook/addon-actions/dist/esm/preview/index.js","webpack:///./node_modules/core-js/modules/es.array.is-array.js"],"sourcesContent":["export * from './constants';\nexport * from './models';\nexport * from './preview';\n\nif (module && module.hot && module.hot.decline) {\n  module.hot.decline();\n}","export * from './ActionDisplay';\nexport * from './ActionsFunction';\nexport * from './ActionOptions';\nexport * from './ActionsMap';\nexport * from './DecoratorFunction';\nexport * from './HandlerFunction';","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport { action } from '../index'; // interface ActionsParameter {\n//   disable?: boolean;\n//   argTypesRegex?: RegExp;\n// }\n\n/**\n * Automatically add action args for argTypes whose name\n * matches a regex, such as `^on.*` for react-style `onClick` etc.\n */\n\nexport var inferActionsFromArgTypesRegex = function inferActionsFromArgTypesRegex(context) {\n  var args = context.args,\n      argTypes = context.argTypes,\n      actions = context.parameters.actions;\n\n  if (!actions || actions.disable || !actions.argTypesRegex || !argTypes) {\n    return {};\n  }\n\n  var argTypesRegex = new RegExp(actions.argTypesRegex);\n  var argTypesMatchingRegex = Object.entries(argTypes).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        name = _ref2[0];\n\n    return !!argTypesRegex.test(name);\n  });\n  return argTypesMatchingRegex.reduce(function (acc, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        name = _ref4[0],\n        argType = _ref4[1];\n\n    if (typeof args[name] === 'undefined') {\n      acc[name] = action(name);\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Add action args for list of strings.\n */\n\nexport var addActionsFromArgTypes = function addActionsFromArgTypes(context) {\n  var args = context.args,\n      argTypes = context.argTypes,\n      actions = context.parameters.actions;\n\n  if (actions !== null && actions !== void 0 && actions.disable || !argTypes) {\n    return {};\n  }\n\n  var argTypesWithAction = Object.entries(argTypes).filter(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        name = _ref6[0],\n        argType = _ref6[1];\n\n    return !!argType.action;\n  });\n  return argTypesWithAction.reduce(function (acc, _ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n        name = _ref8[0],\n        argType = _ref8[1];\n\n    if (typeof args[name] === 'undefined') {\n      acc[name] = action(typeof argType.action === 'string' ? argType.action : name);\n    }\n\n    return acc;\n  }, {});\n};","import { withActions } from '../index';\nexport var decorators = [withActions];","export * from './action';\nexport * from './actions';\nexport * from './configureActions';\nexport * from './decorateAction';\nexport * from './withActions';","var $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\n\n// `Array.isArray` method\n// https://tc39.es/ecma262/#sec-array.isarray\n$({ target: 'Array', stat: true }, {\n  isArray: isArray\n});\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}