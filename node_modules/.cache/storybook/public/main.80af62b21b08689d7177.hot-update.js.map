{"version":3,"file":"main.80af62b21b08689d7177.hot-update.js","sources":["webpack:///./src/components/atoms/Input/index.jsx","webpack:///./src/components/atoms/Input/index.stories.jsx"],"sourcesContent":["import React, { useState } from 'react';\n// 型チェック\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Root = styled.input`\n  width: 100%;\n  padding: 10px 15px;\n  font-size: 16px;\n  border-radius: 4px;\n  border: 2px solid #ddd;\n  box-sizing: border-box;\n  :focus {\n    border-color: rgba(100, 100, 255, .5);\n  }\n  ::placeholder {\n    color: #ddd;\n  }\n`;\n\n// プレゼンテーショナル・コンポーネントを定義\n// 見た目に責務を持つコンポーネントをプレゼンテーショナル・コンポーネント\nexport const InputPresenter = ({className, onChange, defaultValue, placeholder}) => (\n  <Root\n  className={className}\n  defaultValue={defaultValue}\n  onChange={onChange}\n  placeholder={placeholder}\n/>\n);\n\n// 型を定義\nInputPresenter.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\n// defaultProps というプロパティを割り当てることで、props に値が渡されなかった際のデフォルト値を定義することができる\nInputPresenter.defaultProps = {\n  className: '',\n  onChange: null,\n  defaultValue: '',\n  placeholder: '',\n};\n\n// コンテナー・コンポーネント\n// ロジックだけに責務を持つコンポーネントをコンテナー・コンポーネント\nexport const InputContainer = ({\n  className,\n  onChange,\n  defaultValue,\n  placeholder,\n  presenter,\n}) => {\n  const [value, setValue] = useState(defaultValue);\n  return presenter({\n    className,\n    onChange: (e) => {\n      // 入力値が変更された時のハンドラ\n      const { value: newValue } = e.target;\n      if (newValue === value) {\n        // 値が変更されていなければ何もしない\n        return;\n      }\n      // 新しい値をセットする\n      setValue(newValue);\n      // 親コンポーネントから渡されたonChangeを呼ぶ\n      onChange(newValue);\n    },\n    defaultValue,\n    placeholder,\n  });\n};\n\nInputContainer.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n  presenter: PropTypes.func.isRequired,\n};\n\nInputContainer.defaultProps = {\n  className: '',\n  onChange: null,\n  defaultValue: '',\n  placeholder: '',\n};\n\nexport default (props) => (\n  <InputContainer\n    presenter={InputPresenter}\n    {...props}\n  />\n);\n\n\n// {...props} という記述は、propsオブジェクトの中身を全てコンポーネントに渡すための記述\n// 例えばprops = { defaultValue: 'hoge', placeholder: 'fuga'}のようなpropsを渡した場合、propsが展開されて以下のようになる\n\n{/* <InputContainer\n      presenter={InputPresenter}\n      defaultValue=\"hoge\"\n      placeholder=\"fuga\"\n/> */}\n\n// React.useStateは初期値を引数に受け取って、現在の値 と 値を設定する関数 の2つを配列で返す","import React from 'react';\nimport { actions } from '@storybook/addon-actions';\nimport Input from '.';\n\nexport default { title: 'atoms/Input' };\n\nconst props = {\n  placeholder: '入力してください',\n  ...actions('onChange'),\n};\n\nexport const input = () => <Input {...props} />;\n\nexport const defaultValue = () => <Input {...props} defaultValue=\"ねこ\" />;\ndefaultValue.story = {\n  name: 'デフォルト値',\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AADA;AADA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;;AAEA;AAAA;AAAA;AAEA;AACA;AADA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}